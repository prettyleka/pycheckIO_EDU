type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    def between_markers(text: str, begin: str, end: str) -> str:
        """
            returns substring between two given markers
        """
        if begin not in text:
            newS=text.split(end)[0]
            return newS
        if end not in text:
            newS=text.split(begin)[1]
            return newS
        if len(text.split(begin)[0].split()) > len(text.split(end)[0].split()):
            return ""
        else:
            newS=text.split(begin)[1].split(end)[0]
            return newS


    if __name__ == '__main__':
        print('Example:')
        print(between_markers('What is >apple<', '>', '<'))

        # These "asserts" are used for self-checking and not for testing
        assert between_markers('What is >apple<', '>', '<') == "apple", "One sym"
        assert between_markers("<head><title>My new site</title></head>",
                               "<title>", "</title>") == "My new site", "HTML"
        assert between_markers('No[/b] hi', '[b]', '[/b]') == 'No', 'No opened'
        assert between_markers('No [b]hi', '[b]', '[/b]') == 'hi', 'No close'
        assert between_markers('No hi', '[b]', '[/b]') == 'No hi', 'No markers at all'
        assert between_markers('No <hi>', '>', '<') == '', 'Wrong direction'
        print('Wow, you are doing pretty good. Time to check it!')
  learner_created: false
status: Solved
code: |
  def between_markers(text: str, begin: str, end: str) -> str:
      """
          returns substring between two given markers
      """
      if begin not in text:
          newS=text.split(end)[0]
          return newS
      if end not in text:
          newS=text.split(begin)[1]
          return newS
      if len(text.split(begin)[0].split()) > len(text.split(end)[0].split()):
          return ""
      else:
          newS=text.split(begin)[1].split(end)[0]
          return newS


  if __name__ == '__main__':
      print('Example:')
      print(between_markers('What is >apple<', '>', '<'))

      # These "asserts" are used for self-checking and not for testing
      assert between_markers('What is >apple<', '>', '<') == "apple", "One sym"
      assert between_markers("<head><title>My new site</title></head>",
                             "<title>", "</title>") == "My new site", "HTML"
      assert between_markers('No[/b] hi', '[b]', '[/b]') == 'No', 'No opened'
      assert between_markers('No [b]hi', '[b]', '[/b]') == 'hi', 'No close'
      assert between_markers('No hi', '[b]', '[/b]') == 'No hi', 'No markers at all'
      assert between_markers('No <hi>', '>', '<') == '', 'Wrong direction'
      print('Wow, you are doing pretty good. Time to check it!')
seconds_from_change: 175543
